definitions:
  handlers.RegistrationInput:
    properties:
      address:
        type: string
      city:
        type: string
      country:
        type: string
      country_code:
        type: string
      date_of_birth:
        type: string
      email:
        type: string
      mobile:
        type: string
      name:
        type: string
      password:
        minLength: 8
        type: string
      payment_info:
        additionalProperties: true
        type: object
      postal_code:
        type: string
    required:
    - date_of_birth
    - email
    - name
    - password
    type: object
  models.Report:
    properties:
      content:
        type: string
      creation_date:
        type: string
      id:
        type: integer
      last_updated:
        type: string
      matching_scale:
        type: integer
      metadata:
        type: string
      user_id:
        type: integer
    type: object
  models.User:
    properties:
      address:
        type: string
      city:
        type: string
      country:
        type: string
      country_code:
        type: string
      created_at:
        type: string
      date_of_birth:
        type: string
      email:
        type: string
      id:
        type: integer
      last_login:
        type: string
      mobile:
        type: string
      name:
        type: string
      password:
        type: string
      payment_info:
        type: string
      postal_code:
        type: string
      reports:
        items:
          $ref: '#/definitions/models.Report'
        type: array
    type: object
info:
  contact: {}
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Authenticates a user with email and password
      parameters:
      - description: User credentials
        in: body
        name: input
        required: true
        schema:
          additionalProperties:
            type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: 'message: Login successful, user details'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'error: Invalid input'
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: 'error: Invalid credentials'
          schema:
            additionalProperties:
              type: string
            type: object
      summary: User login
      tags:
      - auth
  /logout:
    post:
      description: Logs out a user and invalidates the session token
      produces:
      - application/json
      responses:
        "200":
          description: 'message: Logged out successfully'
          schema:
            additionalProperties:
              type: string
            type: object
      summary: User logout
      tags:
      - auth
  /register:
    post:
      consumes:
      - application/json
      description: Registers a new user with the provided details
      parameters:
      - description: User registration details
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handlers.RegistrationInput'
      produces:
      - application/json
      responses:
        "201":
          description: 'message: User registered successfully'
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: 'error: Invalid input'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: Internal server error'
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register a new user
      tags:
      - auth
  /user:
    get:
      description: Retrieves the authenticated user's details
      produces:
      - application/json
      responses:
        "200":
          description: User details
          schema:
            $ref: '#/definitions/models.User'
        "401":
          description: 'error: Unauthorized'
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get user details
      tags:
      - user
swagger: "2.0"
